import capytaine as cpt
import meshmagick
import meshmagick.mesh as mm
from packaging import version
if version.parse(meshmagick.__version__) < version.parse('3.0'):
    import meshmagick.hydrostatics as hs
else:
    import meshmagick.hydrostatics_old as hs

# solve diff and rad probs
solver = cpt.BEMSolver()

problems = [
    cpt.DiffractionProblem(body=array_of_bodies, omega=1)
    for dof in array_of_bodies.dofs]

problems += [
    cpt.RadiationProblem(body=array_of_bodies, radiating_dof=dof)
    for dof in array_of_bodies.dofs]

results = [solver.solve(pb,keep_details=(True)) for pb in sorted(problems)]
dataset = cpt.assemble_dataset(results)

# solving for RAOs

hsd = hs.Hydrostatics(mm.Mesh(array_of_bodies.mesh.vertices, array_of_bodies.mesh.faces)).hs_data
m = hsd['disp_mass']
I = array_of_bodies.inertia_matrix

rao = cpt.post_pro.rao(dataset)
print(rao)


array_of_bodies.show()
