# function to input new potential from plane-wave approximation
def solve(problem, keep_details=True,new_potential):
        """Solve the linear potential flow problem.
        Parameters
        ----------
        problem: LinearPotentialFlowProblem
            the problem to be solved
        keep_details: bool, optional
            if True, store the sources and the potential on the floating body in the output object
            (default: True)
        Returns
        -------
        LinearPotentialFlowResult
            an object storing the problem data and its results
        """
        LOG.info("Solve %s.", problem)

        potential = new_potential
        new_pressure = problem.rho * new_potential
        # Actually, for diffraction problems: pressure over jω
        #           for radiation problems:   pressure over -ω²
        # The correction is done in `store_force` in the `result` object.

        new_forces = problem.body.integrate_pressure(new_pressure)

        if not keep_details:
            result = problem.make_results_container(new_forces)
        else:
            result = problem.make_results_container(new_forces, sources, new_potential, new_pressure)

        LOG.debug("Done!")

        return result
